// <auto-generated />
using System;
using Aerolinea.Models.Entidades;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aerolinea.Migrations
{
    [DbContext(typeof(ReservaVueloContext))]
    [Migration("20210813001922_Vuelos")]
    partial class Vuelos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Aerolinea.Models.Entidades.Aeropuerto", b =>
                {
                    b.Property<int>("AeropuertoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AeropuertoID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ciudad")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodigoIata")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("AeropuertoId");

                    b.ToTable("Aeropuerto");
                });

            modelBuilder.Entity("Aerolinea.Models.Entidades.ClaseTarifaria", b =>
                {
                    b.Property<int>("ClaseTarifariaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClaseTarifariaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal?>("PrecioBase")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ClaseTarifariaId");

                    b.ToTable("ClaseTarifaria");
                });

            modelBuilder.Entity("Aerolinea.Models.Entidades.Pasajero", b =>
                {
                    b.Property<int>("PasajeroId")
                        .HasColumnType("int")
                        .HasColumnName("PasajeroID");

                    b.Property<string>("Apellidos")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Email")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Nombres")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)");

                    b.Property<int?>("NroDocumento")
                        .HasColumnType("int");

                    b.Property<int?>("Telefono")
                        .HasColumnType("int");

                    b.Property<int?>("TipoDoc")
                        .HasColumnType("int");

                    b.HasKey("PasajeroId");

                    b.ToTable("Pasajero");
                });

            modelBuilder.Entity("Aerolinea.Models.Entidades.Reserva", b =>
                {
                    b.Property<int>("ReservaId")
                        .HasColumnType("int")
                        .HasColumnName("ReservaID");

                    b.Property<int?>("ClaseTarifariaId")
                        .HasColumnType("int")
                        .HasColumnName("ClaseTarifariaID");

                    b.Property<DateTime?>("FechaReserva")
                        .HasColumnType("datetime");

                    b.Property<int>("PasajeroId")
                        .HasColumnType("int")
                        .HasColumnName("PasajeroID");

                    b.Property<decimal?>("PrecioReservado")
                        .HasColumnType("smallmoney");

                    b.Property<int?>("VueloIda")
                        .HasColumnType("int");

                    b.Property<int?>("VueloRetorno")
                        .HasColumnType("int");

                    b.HasKey("ReservaId");

                    b.HasIndex("ClaseTarifariaId");

                    b.HasIndex("PasajeroId");

                    b.HasIndex("VueloIda");

                    b.HasIndex("VueloRetorno");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("Aerolinea.Models.Entidades.Vuelo", b =>
                {
                    b.Property<int>("VueloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AeropuertoDestino")
                        .HasColumnType("int");

                    b.Property<int?>("AeropuertoOrigen")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("HoraLlegada")
                        .HasColumnType("time(0)");

                    b.Property<TimeSpan?>("HoraSalida")
                        .HasColumnType("time(0)");

                    b.HasKey("VueloId");

                    b.HasIndex("AeropuertoDestino");

                    b.HasIndex("AeropuertoOrigen");

                    b.ToTable("Vuelo");
                });

            modelBuilder.Entity("Aerolinea.Models.Entidades.Reserva", b =>
                {
                    b.HasOne("Aerolinea.Models.Entidades.ClaseTarifaria", "ClaseTarifaria")
                        .WithMany("Reserva")
                        .HasForeignKey("ClaseTarifariaId")
                        .HasConstraintName("FK_Reserva_ClaseTarifaria");

                    b.HasOne("Aerolinea.Models.Entidades.Pasajero", "Pasajero")
                        .WithMany("Reserva")
                        .HasForeignKey("PasajeroId")
                        .HasConstraintName("FK_Reserva_Pasajero")
                        .IsRequired();

                    b.HasOne("Aerolinea.Models.Entidades.Vuelo", "VueloIdaNavigation")
                        .WithMany("ReservaVueloIdaNavigation")
                        .HasForeignKey("VueloIda")
                        .HasConstraintName("FK_Reserva_Vuelo_Ida");

                    b.HasOne("Aerolinea.Models.Entidades.Vuelo", "VueloRetornoNavigation")
                        .WithMany("ReservaVueloRetornoNavigation")
                        .HasForeignKey("VueloRetorno")
                        .HasConstraintName("FK_Reserva_Vuelo_Retorno");

                    b.Navigation("ClaseTarifaria");

                    b.Navigation("Pasajero");

                    b.Navigation("VueloIdaNavigation");

                    b.Navigation("VueloRetornoNavigation");
                });

            modelBuilder.Entity("Aerolinea.Models.Entidades.Vuelo", b =>
                {
                    b.HasOne("Aerolinea.Models.Entidades.Aeropuerto", "AeropuertoDestinoNavigation")
                        .WithMany("VueloAeropuertoDestinoNavigation")
                        .HasForeignKey("AeropuertoDestino")
                        .HasConstraintName("FK_Vuelo_Aeropuerto_Destino");

                    b.HasOne("Aerolinea.Models.Entidades.Aeropuerto", "AeropuertoOrigenNavigation")
                        .WithMany("VueloAeropuertoOrigenNavigation")
                        .HasForeignKey("AeropuertoOrigen")
                        .HasConstraintName("FK_Vuelo_Aeropuerto_Origen");

                    b.Navigation("AeropuertoDestinoNavigation");

                    b.Navigation("AeropuertoOrigenNavigation");
                });

            modelBuilder.Entity("Aerolinea.Models.Entidades.Aeropuerto", b =>
                {
                    b.Navigation("VueloAeropuertoDestinoNavigation");

                    b.Navigation("VueloAeropuertoOrigenNavigation");
                });

            modelBuilder.Entity("Aerolinea.Models.Entidades.ClaseTarifaria", b =>
                {
                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Aerolinea.Models.Entidades.Pasajero", b =>
                {
                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Aerolinea.Models.Entidades.Vuelo", b =>
                {
                    b.Navigation("ReservaVueloIdaNavigation");

                    b.Navigation("ReservaVueloRetornoNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
